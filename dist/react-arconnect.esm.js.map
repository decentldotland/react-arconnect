{"version":3,"file":"react-arconnect.esm.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext, createContext } from 'react';\nimport { AppInfo, GatewayConfig, PermissionType } from 'arconnect';\n\nexport type AlgorithmInterface =\n  | AlgorithmIdentifier\n  | RsaPssParams\n  | EcdsaParams;\n\nexport interface options {\n  algorithm: string;\n  hash: string;\n  salt?: string;\n}\n\nexport interface ANS {\n  address_color: string;\n  currentLabel: string;\n  avatar: string;\n}\n\nexport type createSignatureInterface = (\n  data: Uint8Array,\n  signatureParams: AlgorithmInterface\n) => Promise<Uint8Array | undefined>;\n\nexport type encryptInterface = (\n  options: {\n    name: string;\n    hash?: string;\n    salt?: string;\n  },\n  data: BufferSource\n) => Promise<Uint8Array>;\n\nexport type decryptInterface = (\n  data: Uint8Array,\n  algorithm: options\n) => Promise<string>;\n\nexport type arconnectConnectInterface = (\n  permissions: PermissionType[],\n  appInfo?: AppInfo,\n  gatewayConfig?: GatewayConfig\n) => Promise<void>;\n\nexport interface ArconnectContextInterface {\n  walletPermissions: PermissionType[];\n  walletConnected: boolean;\n  address: string;\n  ANS: ANS | undefined;\n  arconnectConnect: arconnectConnectInterface;\n  arconnectDisconnect: () => Promise<void>;\n  getPublicKey: () => Promise<string>;\n  createSignature: createSignatureInterface;\n  encrypt: encryptInterface;\n  decrypt: decryptInterface;\n  shortenAddress: (address: string) => string;\n};\n\nexport const defaultSignatureParams = { name: 'RSA-PSS', saltLength: 32 };\nexport const defaultAlgorithmParams = {\n  name: 'RSA-PSS',\n  hash: 'sha256',\n  saltLength: 32,\n};\n\nexport const ANS_URL = 'https://ans-resolver.herokuapp.com/resolve-as-arpage/';\n\nexport const ArconnectContext = createContext<\n  Partial<ArconnectContextInterface>\n>({} as ArconnectContextInterface);\n\nexport function useArconnect(): Partial<ArconnectContextInterface> {\n  const useArconnectContext: Partial<ArconnectContextInterface> = useContext(\n    ArconnectContext\n  );\n\n  if (useArconnectContext === null) {\n    throw new Error(\n      'useArconnect() can only be used inside of <ArconnectProvider />, ' +\n        'please declare it at a higher level.'\n    );\n  }\n\n  return useArconnectContext;\n}\n\ntype Props = {\n  children: any;\n};\n\nexport const ArconnectProvider = (props: Props) => {\n  const [walletConnected, setWalletConnected] = useState<boolean>(false);\n  const [address, setAddress] = useState<string>('');\n  const [ANS, setANS] = useState<ANS | undefined>();\n  const [walletPermissions, setWalletPermissions] = useState<PermissionType[]>(\n    []\n  );\n\n  const arconnectConnect: arconnectConnectInterface = async (\n    permissions,\n    appInfo,\n    gatewayConfig\n  ) => {\n    try {\n      if (!window.arweaveWallet)\n        throw new Error('No ArConnect wallet detected');\n      if (permissions.length === 0 || !permissions.includes('ACCESS_ADDRESS'))\n        throw new Error(\n          'ArConnect requires ACCESS_ADDRESS permission to connect'\n        );\n      let currentPerms = await window.arweaveWallet.getPermissions();\n      if (currentPerms.length === 0)\n        await window.arweaveWallet.connect(permissions, appInfo, gatewayConfig);\n      currentPerms = await window.arweaveWallet.getPermissions();\n      const correctPerms =\n        permissions.sort().toString() === currentPerms.sort().toString();\n\n      if (!correctPerms) {\n        await window.arweaveWallet.disconnect();\n        if (currentPerms.length !== 0)\n          throw new Error('Re-connect with correct permissions');\n        return;\n      }\n      setWalletPermissions(permissions);\n      setAddress(await _getAddress());\n      setWalletConnected(true);\n    } catch (Error) {\n      console.error(Error);\n    }\n  };\n\n  const arconnectDisconnect = async () => {\n    try {\n      await window.arweaveWallet.disconnect();\n      setWalletConnected(false);\n      setAddress(undefined);\n      setWalletPermissions([]);\n    } catch (Error) {\n      console.error(Error);\n    }\n  };\n\n  const getPublicKey = async () => {\n    try {\n      return await window.arweaveWallet.getActivePublicKey();\n    } catch (Error) {\n      console.error(Error);\n      return '';\n    }\n  };\n\n  // example of params for signature generation:\n  // data: new TextEncoder().encode(\"Hello world!\");\n  // signatureParams: defaultSignatureParams\n\n  const createSignature: createSignatureInterface = async (\n    data,\n    signatureParams\n  ) => {\n    try {\n      const signature = await window.arweaveWallet.signature(\n        data,\n        signatureParams\n      );\n      if (!signature) throw new Error('ArConnect signature generation failed');\n\n      return signature;\n    } catch (Error) {\n      console.error(Error);\n      return undefined;\n    }\n  };\n\n  // TODO: NEEDS FURTHER IMPROVEMENT\n  const encrypt: encryptInterface = async (options, data) => {\n    // @ts-ignore\n    const encryptedData = await window.arweaveWallet.encrypt(data, options);\n    return encryptedData;\n  };\n\n  // TODO: NEEDS FURTHER IMPROVEMENT\n  const decrypt: decryptInterface = async (data, options) => {\n    const decryptedData = await window.arweaveWallet.decrypt(data, options);\n    return decryptedData;\n  };\n\n  const shortenAddress = (address: string, maxLength = 20) => {\n    // to avoid trimming small names by default\n    if (address.length < maxLength) return address;\n\n    return (\n      address.substring(0, maxLength / 2) +\n      '...' +\n      address.substring(address.length - maxLength / 2, address.length)\n    );\n  };\n\n  // wallet address change event\n  // when the user switches wallets\n  const _walletSwitchEvent = async (e: any) => {\n    setAddress(e.detail.address);\n  };\n\n  const _walletLoadedEvent = async () => {\n    try {\n      const addr = await _getAddress();\n      setAddress(addr);\n      // @ts-ignore\n      setANS(res);\n      setWalletConnected(true);\n    } catch {\n      setAddress(undefined);\n      setWalletConnected(false);\n    }\n  };\n\n  const _getAddress = () => window.arweaveWallet.getActiveAddress();\n\n  const _fetchANS = async (address: string) => {\n    try {\n      if (!address) throw new Error('No address detected');\n      const response = await fetch(ANS_URL + address);\n      let ans: ANS | undefined;\n      try {\n        ans = await response.json();\n      } catch {\n        console.warn(`address ${address} not found`);\n        ans = undefined;\n      }\n\n      return {\n        address_color: ans?.address_color,\n        currentLabel: ans?.currentLabel,\n        avatar: ans?.avatar,\n      };\n    } catch (error) {\n      console.error(error);\n      return undefined;\n    }\n  };\n\n  useEffect(() => {\n    // add ArConnect event listeners\n    window.addEventListener('arweaveWalletLoaded', _walletLoadedEvent);\n    window.addEventListener('walletSwitch', _walletSwitchEvent);\n    return () => {\n      // remove ArConnect event listeners\n      window.removeEventListener('arweaveWalletLoaded', _walletLoadedEvent);\n      window.removeEventListener('walletSwitch', _walletSwitchEvent);\n    };\n  });\n\n  useEffect(() => {\n    const fetchANSData = async () => {\n      if (!address) return;\n      const data = await _fetchANS(address);\n      if (data) setANS({ ...data });\n    };\n\n    fetchANSData();\n  }, [address]);\n\n  useEffect(() => {\n    let apiInjected = false;\n\n    const loadedEvent = async () => {\n      if (address) return;\n      apiInjected = true;\n\n      try {\n        const currentPerms = await window.arweaveWallet.getPermissions();\n        const correctPerms =\n          walletPermissions.sort().toString() == currentPerms.sort().toString();\n        if (!correctPerms) {\n          await window.arweaveWallet.disconnect();\n          if (currentPerms.length !== 0)\n            throw new Error('Re-connect with correct permissions.');\n          return;\n        } else {\n          setWalletPermissions(currentPerms);\n        }\n        const addr = await window.arweaveWallet.getActiveAddress();\n        setAddress(addr);\n        _fetchANS(addr).then(setANS);\n      } catch {}\n    };\n\n    window.addEventListener('arweaveWalletLoaded', loadedEvent);\n\n    // double check if arconnect was added\n    setTimeout(() => {\n      if (apiInjected || !window.arweaveWallet) return;\n      loadedEvent();\n    }, 1000);\n\n    return () => window.removeEventListener('arweaveWalletLoaded', loadedEvent);\n  }, []);\n\n  return (\n    <ArconnectContext.Provider\n      value={{\n        walletPermissions,\n        walletConnected,\n        address,\n        ANS,\n        arconnectConnect,\n        arconnectDisconnect,\n        getPublicKey,\n        createSignature,\n        decrypt,\n        encrypt,\n        shortenAddress,\n      }}\n    >\n      {props.children}\n    </ArconnectContext.Provider>\n  );\n};\n"],"names":["defaultSignatureParams","name","saltLength","defaultAlgorithmParams","hash","ANS_URL","ArconnectContext","createContext","useArconnect","useArconnectContext","useContext","Error","ArconnectProvider","props","useState","walletConnected","setWalletConnected","address","setAddress","ANS","setANS","walletPermissions","setWalletPermissions","arconnectConnect","permissions","appInfo","gatewayConfig","window","arweaveWallet","length","includes","getPermissions","currentPerms","connect","correctPerms","sort","toString","disconnect","_getAddress","console","error","arconnectDisconnect","undefined","getPublicKey","getActivePublicKey","createSignature","data","signatureParams","signature","encrypt","options","encryptedData","decrypt","decryptedData","shortenAddress","maxLength","substring","_walletSwitchEvent","e","detail","_walletLoadedEvent","addr","res","getActiveAddress","_fetchANS","fetch","response","json","ans","warn","address_color","currentLabel","avatar","useEffect","addEventListener","removeEventListener","fetchANSData","apiInjected","loadedEvent","then","setTimeout","children"],"mappings":"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"}