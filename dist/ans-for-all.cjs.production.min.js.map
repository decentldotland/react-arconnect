{"version":3,"file":"ans-for-all.cjs.production.min.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/index.tsx","../src/components/badge.jsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// @flow \nimport * as React from 'react';\nimport { Default_Badge } from './components/badge';\n// import useConenctor from './components/arconnect_loader'\nimport './index.css';\nimport Swal from 'sweetalert2'\n// import { useTranslation } from 'react-i18next'\nimport { PermissionType } from 'arconnect';\n\nimport * as lang from './en.json';\n\nconst requiredPermissions: PermissionType[] = ['ACCESS_ADDRESS', 'ACCESS_ALL_ADDRESSES', 'SIGNATURE', 'SIGN_TRANSACTION', 'ACCESS_PUBLIC_KEY']\n\ntype Props = {\n    children: any;\n};\n\ninterface IANSContext {\n    walletConnected: boolean;\n    address: string;\n    ansData: {\n        address_color: string;\n        currentLabel: string;\n        avatar: string;\n    };\n    shortenAddress: (addr: any) => any;\n    arconnectConnect: () => Promise<void>;\n    arconnectDisconnect: () => Promise<void>;\n}\n\nexport const ANSContext = React.createContext<Partial<IANSContext>>({} as IANSContext);\n\n\nexport function useAns(): Partial<IANSContext> {\n    const UseANSContext: Partial<IANSContext> = React.useContext(ANSContext);\n\n    if (UseANSContext === null) {\n        throw new Error(\n            'useAns() can only be used inside of <AnsProvider />, ' +\n            'please declare it at a higher level.'\n        )\n    }\n\n    return UseANSContext;\n}\n\nexport const Badge = Default_Badge;\n\n//will replace later\nconst connector = lang.connector;\n\nexport const AnsProvider = (props: Props) => {\n\n    const [walletConnected, setWalletConnected] = React.useState(false)\n    const [address, setAddress] = React.useState(undefined)\n    const [ansData, setANSData] = React.useState(undefined)\n    // const { t } = useTranslation()\n\n    React.useEffect(() => {\n        // add ArConnect event listeners\n        window.addEventListener('arweaveWalletLoaded', walletLoadedEvent)\n        window.addEventListener('walletSwitch', walletSwitchEvent)\n        return () => {\n            // remove ArConnect event listeners\n            window.removeEventListener('arweaveWalletLoaded', walletLoadedEvent)\n            window.removeEventListener('walletSwitch', walletSwitchEvent)\n        }\n    })\n\n    // wallet address change event\n    // when the user switches wallets\n    const walletSwitchEvent = async (e) => {\n        setAddress(e.detail.address)\n        // setAddress(\"ljvCPN31XCLPkBo9FUeB7vAK0VC6-eY52-CS-6Iho8U\")\n        // setANSData(await getANSLabel(e.detail.address))\n    }\n\n    // ArConnect script injected event\n    const walletLoadedEvent = async () => {\n        try {\n            // connected, set address\n            // (the user can still be connected, but\n            // for this actions the \"ACCESS_ADDRESS\"\n            // permission is required. if the user doesn't\n            // have that, we still need to ask them to connect)\n            const addr = await getAddr()\n            setAddress(addr)\n            // setAddress(\"ljvCPN31XCLPkBo9FUeB7vAK0VC6-eY52-CS-6Iho8U\")\n            // setANSData(await getANSLabel(addr))\n            setWalletConnected(true)\n        } catch {\n            // not connected\n            setAddress(undefined)\n            setWalletConnected(false)\n        }\n    }\n\n    const installArConnectAlert = () => {\n        Swal.fire({\n            icon: \"warning\",\n            title: connector.swal.title,\n            text: connector.swal.text,\n            footer: `<a href=\"https://arconnect.io\" rel=\"noopener noreferrer\" target=\"_blank\">${connector.swal.footer}</a>`,\n            customClass: \"font-mono\",\n        })\n    }\n\n    const getAddr = () => window.arweaveWallet.getActiveAddress()\n\n    const shortenAddress = (addr) => {\n        if (addr) {\n            return addr.substring(0, 4) + '...' + addr.substring(addr.length - 4)\n        }\n        return addr\n    }\n\n    React.useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch(`https://ans-testnet.herokuapp.com/profile/${address}`)\n                const ans = await response.json()\n                const { address_color, currentLabel, avatar = \"\" } = ans;\n                console.log({ address_color, currentLabel, avatar })\n                setANSData({ address_color, currentLabel, avatar })\n            } catch (error) {\n                console.error(error)\n            }\n        };\n\n        fetchData();\n    }, [address]);\n\n    const arconnectConnect = async () => {\n        if (window.arweaveWallet) {\n            try {\n                await window.arweaveWallet.connect(requiredPermissions)\n                setAddress(await getAddr())\n                setWalletConnected(true)\n\n            } catch { }\n        } else {\n            installArConnectAlert()\n        }\n    }\n\n    const arconnectDisconnect = async () => {\n        await window.arweaveWallet.disconnect()\n        setWalletConnected(false)\n        setAddress(undefined)\n    }\n\n\n    return (\n        <ANSContext.Provider value={{ walletConnected, address, ansData, shortenAddress, arconnectConnect, arconnectDisconnect }}>\n            {props.children}\n        </ANSContext.Provider>\n    );\n};","import * as React from 'react';\n\n\nimport { useAns } from '../';\n\nimport * as lang from '../en.json';\n\nexport const Default_Badge = () => {\n\n    //will replace later\n    const connector = lang.connector;\n\n    const {\n        walletConnected,\n        address,\n        ansData,\n        shortenAddress,\n        arconnectConnect,\n        arconnectDisconnect\n    } = useAns();\n\n    return (\n        <>\n            {(walletConnected && (\n                <>\n                    <div\n                        className=\"btn btn-outline btn-secondary btn-sm md:btn-md text-sm md:text-base normal-case\"\n                        onClick={arconnectDisconnect}\n                    >\n                        <span>\n                            {ansData?.currentLabel ? `${ansData?.currentLabel}.ar` : shortenAddress(address)}\n                        </span>\n                        {(ansData?.avatar === \"\") ?\n                            <div className=\"mx-auto rounded-full h-6 w-6 ml-2 btn-secondary border-[1px]\" style={{ backgroundColor: ansData?.address_color }}></div> :\n                            <div className=\"mx-auto rounded-full h-6 w-6 overflow-hidden ml-2 btn-secondary border-[1px]\" style={{ backgroundColor: ansData?.address_color }}>\n                                <img src={`https://arweave.net/${ansData?.avatar}`} alt=\"Profile\" width=\"100%\" height=\"100%\" />\n                            </div>}\n\n                    </div>\n                </>\n            )) || (\n                    <div\n                        className='btn btn-primary btn-sm md:btn-md text-sm md:text-base'\n                        onClick={arconnectConnect}\n                    >\n                        <img className='w-3.5 h-3.5 mr-3.5 md:w-4 md:h-4 md:mr-4' src=\"https://nanofuxion.ar.page/favicon.png\"></img> {(connector.login)}\n                    </div>\n                )}\n        </>\n    )\n}"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","requiredPermissions","ANSContext","React","useAns","UseANSContext","Error","connector","lang","props","walletConnected","setWalletConnected","undefined","address","setAddress","ansData","setANSData","window","addEventListener","walletLoadedEvent","walletSwitchEvent","removeEventListener","e","detail","_context2","getAddr","arweaveWallet","getActiveAddress","_context3","fetch","response","json","address_color","ans","currentLabel","avatar","console","log","error","fetchData","React.createElement","Provider","value","shortenAddress","addr","substring","length","arconnectConnect","_context4","connect","Swal","fire","icon","title","swal","text","footer","customClass","arconnectDisconnect","_context5","disconnect","children","className","onClick","backgroundColor","src","alt","width","height","login"],"mappings":"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"}